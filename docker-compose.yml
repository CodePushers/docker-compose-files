version: '3.8'

services:
  booking:
    image: riceguard16/booking-service:latest
    container_name: booking
    environment:
      - FilePath=/srv/plans/
      - HostnameRabbit=rabbitmq-dev
    expose:
      - "80"
    networks:
      - default
    volumes:
      - plans:/srv/plans
    depends_on:
      - rabbitmq

  planning:
    image: riceguard16/planning-service:latest
    container_name: planning
    environment:
      - FilePath=/srv/plans/
      - HostnameRabbit=rabbitmq-dev
    expose:
      - "80"
    networks:
      - default
    volumes:
      - plans:/srv/plans
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:management
    hostname: "rabbitmq-dev"
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - default
    healthcheck:
      test: "rabbitmq-diagnostics -q ping"
      interval: 10s
      timeout: 10s
      retries: 5

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - default
    volumes:
      - grafana-storage:/var/lib/grafana

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - planning
      - booking
    ports:
      - "4000:4000"

volumes:
  plans:
    external: false
  grafana-storage:
    external: true

networks:
  default:
    driver: bridge
