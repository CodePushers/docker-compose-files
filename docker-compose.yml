version: '3.8'

services:
  booking:
    image: jacobkaae/booking-service:latest
    container_name: booking
    environment:
      - FilePath=/srv/plans/
      - HostnameRabbit=rabbitmq-dev
    expose:
      - "80"
    networks:
      - default
    volumes:
      - plans:/srv/plans
    depends_on:
      - rabbitmq

  planning:
    image: jacobkaae/planning-service:latest
    container_name: planning
    environment:
      - FilePath=/srv/plans/
      - HostnameRabbit=rabbitmq-dev
    expose:
      - "80"
    networks:
      - default
    volumes:
      - plans:/srv/plans
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy

  maintenance:
    image: jacobkaae/maintenance-service:latest
    container_name: maintenance
    environment:
      - Secret=fwnhy8423HBgbirf6q3wfrhgedr32etsg7u
      - Issuer=JADADADDAADA
      - FilePath=/srv/plans/
      - HostnameRabbit=rabbitmq-dev
    expose:
      - "80"
    networks:
      - default
    volumes:
      - plans:/srv/plans
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:management
    hostname: "rabbitmq-dev"
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - default
    healthcheck:
      test: "rabbitmq-diagnostics -q ping"
      interval: 10s
      timeout: 10s
      retries: 5

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - default
    volumes:
      - grafana-storage:/var/lib/grafana

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - planning
      - maintenance
      - booking
      - authentication
      - vehicle
    ports:
      - "4000:4000"

  vault_dev:
    image: hashicorp/vault:latest
    restart: on-failure:10
    ports:
        - "8201:8201"
    environment:
        VAULT_ADDR: 'https://0.0.0.0:8201'
        VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "0.0.0.0:8201","tls_disable":"0", "tls_cert_file":"/data/cert.pem", "tls_key_file":"/data/key.pem"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
        VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
        VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
        - IPC_LOCK
    volumes:
        - ./vault-volume:/data
    healthcheck:
        retries: 5
    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"
  
  authentication:
    image: jacobkaae/auth-service:latest
    container_name: authentication
    environment:
      - Secret=fwnhy8423HBgbirf6q3wfrhgedr32etsg7u
      - Issuer=JADADADDAADA
      - ConnectionURI=mongodb://admin:1234@mongodb-dev:27017/?authSource=admin
      - DatabaseName=user
      - CollectionName=users
    expose:
      - "80"
    networks:
      - default

  vehicle:
    image: jacobkaae/vehicle-service:latest
    container_name: vehicle
    environment:
      - Secret=fwnhy8423HBgbirf6q3wfrhgedr32etsg7u
      - Issuer=JADADADDAADA
      - ConnectionURI=mongodb://admin:1234@mongodb-dev:27017/?authSource=admin
      - DatabaseName=fleet
      - CollectionName=vehicles
      - ImagePath=/srv/images/
    expose:
      - "80"
    volumes:
      - images:/srv/images
    networks:
      - default

  mongodb:
    image: mongo:latest
    hostname: "mongodb-dev"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
    ports:
      - 27018:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - default

volumes:
  plans:
    external: false
  grafana-storage:
    external: true
  mongodb_data_container:
  images_data:
    external: false
  images:
    external: false

networks:
  default:
    driver: bridge
